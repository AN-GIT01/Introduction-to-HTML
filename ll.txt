Lesson 1.
Созданные html файлы полезно проверять на ресурсе: https://validator.w3.org

Lesson 2.
Типовая структура html файла
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="author" content="AN">
    <meta name="description" content="More detailed description of this page">
    <title>Html Page</title>
    <link rel="icon" href="html5.png" type="image/x-icon">
    <link rel="stylesheet" href="main.css" type="text/css">
  </head>
  <body>
    <h1>It is header 1 element</h1>
    <p>It is not my first html page</p>
  </body>
</html>

Lesson 3.
Для некоторых символов используются кодировка, например: &nbsp;&lt;&lt;&copy; 
https://developer.mozilla.org/en-US/docs/Glossary/Character_reference

Lesson 4.
Есть 3 типа списков:
Упорядоченный: <ol> <li>
Неупорядоченный: <ul> <li>
Список описаний (содержит 2 типа элементов): <dl> <dt> <dd>

Lesson 5.
Ссылки бывают нескольких видов:
Абсолютная: <a href="https://developer.mozilla.org">MDN</a>
Относительная: <p>Download an <a href="html5.png" download>HTML5 icon file</a></p>
Ссылка на элемент страницы: <li><a href="#sec1">Link to section 1</a></li> (при этом на странице должен быть элемент с id="sec1")
Сылка на начало текущей страницы: <p><a href="#">Back to top</a></p>
Ссылка на главную страницу: <p><a href="/">Back to root page</a></p>

У ссылок могут быть заданы атрибуты, например:
<p>Open : <a href="https://google.com" target="_blank">Google</a> in a new tab</p>
<p>Download an <a href="html5.png" download>HTML5 icon file</a></p>
так атрибут download подскажет браузеру, что файл нужно скачать, а отрибут target="_blank" - что ссылку нужно открыть в новой вкладке.

Lesson 6.
Изображения добавляют с помощью тега img, у него есть атрибуты: src - путь, alt - текст заменитель в случае недоступлости изображения, title - попап, который будет всплывать при на наведении на изображение, loading="lazy" - отложенная загрузка, также автор рекомендует указывать width и height.
С помощью тега <figure> можно компоновать изображение и относящуюся к нему подпись
          <figure>
            <img src="img/caribbean.jpg" alt="caribbean beach" title="good place to visit" width="400" height="225" loading="lazy">
            <figcaption>
              Caribbean Beach Getaway
            </figcaption>
          </figure>

Lesson 7.
Семантические теги.
"крупные" теги: header, main, footer - причем на странице допускается не более одного тега main. Более мелкими тегами являются article и section. Обычно в article выделяют часть страницы, которая довольно обособлена и имеет смысл, так что например ее можно перенести на другую страницу. В section объединяют элементы внутри article. В элемент aside включают компоненты, которые связаны с основным содержимым страницы, но не является ее неотъемлемой частью (боковые панели, рекламные блоки).  
Видимые семантические элементы details и summary также mark:
            <details>
              <summary>
                Here is demonstration of using such
                <mark>simantic</mark> elements as: aside, detailes, summary,
                mark, time
              </summary>
              <p>
                This you will see after click arrow. Here is time:
                <time datetime="12:00">12:00</time> o'clock
              </p>
            </details>
невидимым элементом является элемент time с его помощью можно сементически выделять даты/время, либо временные интервалы.
Для наглядного отодражения структуры страницы можно использовать расширение для хром: "HTML5 Outliner".

Lesson 8.
Таблица определяется с помощью тега table. 
tr - table row
td - table data
th - table head (может применяться как для определения заголовкос столбцов, так и для определения заголовков строк)
по аналогии с html страницей используются семантические теги: caption, thead, tbody, tfoot. Для заголовков строк и столбцов исмользуется семантический атрибут scope.
Для объединения нескольких ячеек используют атрибуты rowspan и colspan.
Интересно, что таблица - блочный элемент, но она занимает только пространство необходимое для отображения содержимого, а остальное - бекграунд.

Lesson 9.
Формы объявляются тегом form. типичный пример:
<form action="https://httpbin.org/get" method="get">
кнопки на форме можно переопределить
 <button type="submit" formaction="https://httpbin.org/post" formmethod="post">Post</button> - переопределит адрес и метод отправки данных
 <button type="reset">Reset</button> - сбросит содержимое полей ввода в исходное состояние
элементы ввода можно группировать с помощью тега fieldset, в таком случае станет доступна legend - надпись для всей группы элементов.
  <fieldset>
    <legend>Preffered food?</legend>
    <p>...</p>

типичный приме поля ввода (оборачиваем в параграф, чтобы он стал display box)
<p>
  <label for="firstName">First Name:</label>
  <input type="text" name="firstName" id="firstName" placeholder="Jane" autocomplete="on" required autofocus/>
</p>

типичный пример combobox
<p>
  <label for="coffee">Favorite Coffee:</label>
  <select name="coffee" id="coffee">
    <optgroup label="Coffees">
      <option value="regular coffee">Regular Coffee</option>
      <option value="iced coffee">Iced Coffee</option>
    </optgroup>
    <option value="other">Other</option>
  </select>
</p>

похожим образом можно организовать Radio и Checkbox
для ввода текстовой информации используют тег textarea, например:
  <fieldset>
    <legend>Send me a note</legend>
    <label for="message">Your Message:</label>
    <br>
    <textarea name="message" id="message" cols="30" rows="10" placeholder="type your message here"></textarea>
  </fieldset>


 


